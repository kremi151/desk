plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'io.gitlab.arturbosch.detekt'
    id 'maven-publish'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 23
        targetSdk 31
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'lu.kremi151'
            artifactId = 'desk'
            version = rootProject.isRelease
                ? rootProject.versionName
                : "${rootProject.versionName}-SNAPSHOT"

            afterEvaluate {
                from components.release
            }
        }
    }
    repositories {
        maven {
            name = 'githubPackages'
            url = "https://maven.pkg.github.com/kremi151/desk"
            credentials(PasswordCredentials)
        }
    }
}

def detektTask = tasks.named("detekt")
detektTask.configure {
    config.setFrom(files(rootProject.file('detekt.yml')))

    // Apply defaults and override them using config file
    buildUponDefaultConfig = true

    reports {
        xml {
            enabled = true
        }
    }
}

dependencies {
    def jUnitVersion = "4.13.2"
    def androidXTestVersion = "1.4.0"
    def roboelectricVersion = "4.9"
    def mockitoVersion = "4.8.0"
    def mockitoKotlinVersion = "3.2.0"

    // Required -- JUnit 4 framework
    testImplementation "junit:junit:$jUnitVersion"
    // Optional -- Robolectric environment
    testImplementation "androidx.test:core:$androidXTestVersion"
    testImplementation "org.robolectric:robolectric:$roboelectricVersion"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
}
